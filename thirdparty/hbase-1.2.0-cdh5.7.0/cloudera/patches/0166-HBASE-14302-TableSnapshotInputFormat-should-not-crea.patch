From e2bec198e036403d99adfd930947dd7fcc1feaf7 Mon Sep 17 00:00:00 2001
From: Huaxiang Sun <hsun@cloudera.com>
Date: Fri, 8 Jan 2016 18:39:36 -0800
Subject: [PATCH 166/197] HBASE-14302 TableSnapshotInputFormat should not create back references when restoring snapshot (addendum)

Reason: Bug
Author: Enis Soztutar
Ref: CDH-35507

Change-Id: Ic2b944a292949c7053a326c2def679253a656be1
---
 .../apache/hadoop/hbase/regionserver/HRegion.java  |    8 ++++----
 .../hbase/snapshot/RestoreSnapshotHelper.java      |    6 +++---
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
index 7f92752..38853ee 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java
@@ -3570,13 +3570,13 @@ public class HRegion implements HeapSize, PropagatingConfigurationObserver, Regi
 
     // The regionserver holding the first region of the table is responsible for taking the
     // manifest of the mob dir.
-    if (!Bytes.equals(getStartKey(), HConstants.EMPTY_START_ROW))
+    if (!Bytes.equals(getRegionInfo().getStartKey(), HConstants.EMPTY_START_ROW))
       return;
 
     // if any cf's have is mob enabled, add the "mob region" to the manifest.
-    Map<byte[], Store> stores = getStores();
-    for (Entry<byte[], Store> store : stores.entrySet()) {
-      boolean hasMobStore = store.getValue().getFamily().isMobEnabled();
+    List<Store> stores = getStores();
+    for (Store store : stores) {
+      boolean hasMobStore = store.getFamily().isMobEnabled();
       if (hasMobStore) {
         // use the .mob as the start key and 0 as the regionid
         HRegionInfo mobRegionInfo = MobUtils.getMobRegionInfo(this.getTableDesc().getTableName());
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java
index a560fbf..2ad222f 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper.java
@@ -503,7 +503,7 @@ public class RestoreSnapshotHelper {
         for (SnapshotRegionManifest.StoreFile storeFile: hfilesToAdd) {
           LOG.debug("Adding HFileLink " + storeFile.getName() +
             " to region=" + regionInfo.getEncodedName() + " table=" + tableName);
-          restoreStoreFile(familyDir, regionInfo, storeFile);
+          restoreStoreFile(familyDir, regionInfo, storeFile, createBackRefs);
         }
       } else {
         // Family doesn't exists in the snapshot
@@ -524,7 +524,7 @@ public class RestoreSnapshotHelper {
 
       for (SnapshotRegionManifest.StoreFile storeFile: familyEntry.getValue()) {
         LOG.trace("Adding HFileLink " + storeFile.getName() + " to table=" + tableName);
-        restoreStoreFile(familyDir, regionInfo, storeFile);
+        restoreStoreFile(familyDir, regionInfo, storeFile, createBackRefs);
       }
     }
   }
@@ -616,7 +616,7 @@ public class RestoreSnapshotHelper {
       Path familyDir = new Path(regionDir, familyFiles.getFamilyName().toStringUtf8());
       for (SnapshotRegionManifest.StoreFile storeFile: familyFiles.getStoreFilesList()) {
         LOG.info("Adding HFileLink " + storeFile.getName() + " to table=" + tableName);
-        restoreStoreFile(familyDir, snapshotRegionInfo, storeFile);
+        restoreStoreFile(familyDir, snapshotRegionInfo, storeFile, createBackRefs);
       }
     }
   }
-- 
1.7.0.4

