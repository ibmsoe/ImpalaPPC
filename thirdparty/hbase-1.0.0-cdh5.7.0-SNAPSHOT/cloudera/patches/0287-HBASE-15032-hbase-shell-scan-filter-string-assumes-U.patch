From 9b1643c1554916ecb5179aa7894e55eafdb0b1be Mon Sep 17 00:00:00 2001
From: tedyu <yuzhihong@gmail.com>
Date: Thu, 24 Dec 2015 07:00:22 -0800
Subject: [PATCH 287/295] HBASE-15032 hbase shell scan filter string assumes
 UTF-8 encoding (huaxiang sun)

      Reason: Bug
      Author: Huaxiang Sun
      Ref: CDH-35930

Change-Id: I2fe9b1a433c1894da8057b9b61061c7070e481a5
---
 hbase-shell/src/main/ruby/hbase/table.rb      |    6 ++++--
 hbase-shell/src/test/ruby/hbase/table_test.rb |   16 ++++++++++++++++
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/hbase-shell/src/main/ruby/hbase/table.rb b/hbase-shell/src/main/ruby/hbase/table.rb
index 1c1c69f..694447f 100644
--- a/hbase-shell/src/main/ruby/hbase/table.rb
+++ b/hbase-shell/src/main/ruby/hbase/table.rb
@@ -352,7 +352,8 @@ EOF
       unless filter.class == String
         get.setFilter(filter)
       else
-        get.setFilter(org.apache.hadoop.hbase.filter.ParseFilter.new.parseFilterString(filter))
+        get.setFilter(
+          org.apache.hadoop.hbase.filter.ParseFilter.new.parseFilterString(filter.to_java_bytes))
       end
 
       get.setConsistency(org.apache.hadoop.hbase.client.Consistency.valueOf(consistency)) if consistency
@@ -441,7 +442,8 @@ EOF
         unless filter.class == String
           scan.setFilter(filter)
         else
-          scan.setFilter(org.apache.hadoop.hbase.filter.ParseFilter.new.parseFilterString(filter))
+          scan.setFilter(
+            org.apache.hadoop.hbase.filter.ParseFilter.new.parseFilterString(filter.to_java_bytes))
         end
 
         scan.setTimeStamp(timestamp) if timestamp
diff --git a/hbase-shell/src/test/ruby/hbase/table_test.rb b/hbase-shell/src/test/ruby/hbase/table_test.rb
index 4b38464..c83836e 100644
--- a/hbase-shell/src/test/ruby/hbase/table_test.rb
+++ b/hbase-shell/src/test/ruby/hbase/table_test.rb
@@ -578,6 +578,22 @@ module Hbase
       end
     end
 
+    define_test "scan should support FILTER with non-ASCII bytes" do
+      @test_table.put(4, "x:a", "\x82")
+      begin
+        res = @test_table._scan_internal FILTER => "SingleColumnValueFilter('x', 'a', >=, 'binary:\x82', true, true)"
+        assert_not_equal(res, {}, "Result is empty")
+        assert_kind_of(Hash, res)
+        assert_not_nil(res['4'])
+        assert_not_nil(res['4']['x:a'])
+        assert_nil(res['1'])
+        assert_nil(res['2'])
+      ensure
+        # clean up newly added columns for this test only.
+        @test_table.delete(4, "x:a")
+      end
+    end
+
     define_test "mutation with TTL should expire" do
       @test_table.put('ttlTest', 'x:a', 'foo', { TTL => 1000 } )
       begin
-- 
1.7.9.5

