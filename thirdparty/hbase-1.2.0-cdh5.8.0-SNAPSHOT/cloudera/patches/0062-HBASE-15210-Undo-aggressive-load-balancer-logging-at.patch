From 28921e2a83e76bffcbbaa4885219c223546d876e Mon Sep 17 00:00:00 2001
From: stack <stack@apache.org>
Date: Thu, 4 Feb 2016 16:09:26 -0800
Subject: [PATCH 062/217] HBASE-15210 Undo aggressive load balancer logging at
 tens of lines per millisecond

---
 .../hbase/master/balancer/BaseLoadBalancer.java    |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java
index 8dc7cf6..fd1ddd8 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java
@@ -799,9 +799,11 @@ public abstract class BaseLoadBalancer implements LoadBalancer {
           i++;
           lowestLocalityServerIndex = serverIndicesSortedByLocality[i];
         }
-        LOG.debug("Lowest locality region server with non zero regions is "
+        if (LOG.isTraceEnabled()) {
+          LOG.trace("Lowest locality region server with non zero regions is "
             + servers[lowestLocalityServerIndex].getHostname() + " with locality "
             + localityPerServer[lowestLocalityServerIndex]);
+        }
         return lowestLocalityServerIndex;
       }
     }
@@ -824,9 +826,11 @@ public abstract class BaseLoadBalancer implements LoadBalancer {
             lowestLocalityRegionIndex = j;
           }
         }
-        LOG.debug(" Lowest locality region index is " + lowestLocalityRegionIndex
+        if (LOG.isTraceEnabled()) {
+          LOG.debug(" Lowest locality region index is " + lowestLocalityRegionIndex
             + " and its region server contains " + regionsPerServer[serverIndex].length
             + " regions");
+        }
         return regionsPerServer[serverIndex][lowestLocalityRegionIndex];
       } else {
         return -1;
-- 
1.7.9.5

