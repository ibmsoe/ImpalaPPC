From b8c49cedcd8d8d2845ba914d3ed7dcec6a90e6c7 Mon Sep 17 00:00:00 2001
From: Huaxiang Sun <hsun@cloudera.com>
Date: Fri, 8 Jan 2016 17:43:48 -0800
Subject: [PATCH 182/217] HBASE-14098 Allow dropping caches behind compactions
 (addendum) Summary: On large compactions drop the
 OS level fs cache behind reads and writes.

Reason: MOB Feature
Author: Jingcheng Du
Ref: CDH-35507

Change-Id: I6df7558e9cf13d130105651b02aff0aac51c3e10
---
 .../java/org/apache/hadoop/hbase/mob/MobFile.java  |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/MobFile.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/MobFile.java
index 09438db..3e8f548 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/MobFile.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/MobFile.java
@@ -58,7 +58,7 @@ public class MobFile {
     List<StoreFile> sfs = new ArrayList<StoreFile>();
     sfs.add(sf);
     List<StoreFileScanner> sfScanners = StoreFileScanner.getScannersForStoreFiles(sfs, false, true,
-        false, null, sf.getMaxMemstoreTS());
+        false, false, sf.getMaxMemstoreTS());
 
     return sfScanners.get(0);
   }
@@ -89,7 +89,7 @@ public class MobFile {
     sfs.add(sf);
     try {
       List<StoreFileScanner> sfScanners = StoreFileScanner.getScannersForStoreFiles(sfs,
-        cacheMobBlocks, true, false, null, readPt);
+        cacheMobBlocks, true, false, false, readPt);
       if (!sfScanners.isEmpty()) {
         scanner = sfScanners.get(0);
         if (scanner.seek(search)) {
-- 
1.7.9.5

