From a712057afe7d3ea14d615aed51166bccd6a16f0d Mon Sep 17 00:00:00 2001
From: Esteban Gutierrez <esteban@cloudera.com>
Date: Thu, 5 Mar 2015 20:54:06 -0800
Subject: [PATCH 111/217] CLOUDERA-BUILD Enable HFileV2 by default

Change-Id: I3acfb80b120dc2ced55a9dea6a187db6354e4ec5
Author: Esteban Gutierrez
Reason: Backward compatibility
Ref: CDH-25837
---
 hbase-common/src/main/resources/hbase-default.xml  |    4 +++-
 .../org/apache/hadoop/hbase/io/hfile/HFile.java    |    3 ++-
 .../hbase/mapreduce/TestLoadIncrementalHFiles.java |    3 +++
 ...stLoadIncrementalHFilesUseSecurityEndPoint.java |    3 +++
 .../mapreduce/TestSecureLoadIncrementalHFiles.java |    3 +++
 5 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/hbase-common/src/main/resources/hbase-default.xml b/hbase-common/src/main/resources/hbase-default.xml
index 7385e1e..d9fd781 100644
--- a/hbase-common/src/main/resources/hbase-default.xml
+++ b/hbase-common/src/main/resources/hbase-default.xml
@@ -779,11 +779,13 @@ possible configurations would overwhelm and obscure the important.
   </property>
   <property>
       <name>hfile.format.version</name>
-      <value>3</value>
+      <value>2</value>
       <description>The HFile format version to use for new files.
       Version 3 adds support for tags in hfiles (See http://hbase.apache.org/book.html#hbase.tags).
       Distributed Log Replay requires that tags are enabled. Also see the configuration
       'hbase.replication.rpc.codec'.
+      By default CDH5 uses HFileV2 for backward compatibility
+      purposes.
       </description>
   </property>
   <property>
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
index a67bf8c..f817b52 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java
@@ -318,7 +318,8 @@ public class HFile {
   public static final String FORMAT_VERSION_KEY = "hfile.format.version";
 
   public static int getFormatVersion(Configuration conf) {
-    int version = conf.getInt(FORMAT_VERSION_KEY, MAX_FORMAT_VERSION);
+    /** CLOUDERA-SPECIFIC: Force HFileV2 as the default HFile version */
+    int version = conf.getInt(FORMAT_VERSION_KEY, MIN_FORMAT_VERSION);
     checkFormatVersion(version);
     return version;
   }
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java
index 4f1fc0f..3590de2 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java
@@ -93,6 +93,9 @@ public class TestLoadIncrementalHFiles {
     // change default behavior so that tag values are returned with normal rpcs
     util.getConfiguration().set(HConstants.RPC_CODEC_CONF_KEY,
         KeyValueCodecWithTags.class.getCanonicalName());
+    // force hfile v3
+    util.getConfiguration().setInt(HFile.FORMAT_VERSION_KEY, 3);
+
     util.startMiniCluster();
 
     setupNamespace();
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFilesUseSecurityEndPoint.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFilesUseSecurityEndPoint.java
index 11627a1..e80fb39 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFilesUseSecurityEndPoint.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFilesUseSecurityEndPoint.java
@@ -21,6 +21,7 @@ package org.apache.hadoop.hbase.mapreduce;
 
 import org.apache.hadoop.hbase.HConstants;
 import org.apache.hadoop.hbase.codec.KeyValueCodecWithTags;
+import org.apache.hadoop.hbase.io.hfile.HFile;
 import org.apache.hadoop.hbase.testclassification.LargeTests;
 import org.apache.hadoop.hbase.coprocessor.CoprocessorHost;
 import org.junit.BeforeClass;
@@ -38,6 +39,8 @@ public class TestLoadIncrementalHFilesUseSecurityEndPoint extends TestLoadIncrem
     // change default behavior so that tag values are returned with normal rpcs
     util.getConfiguration().set(HConstants.RPC_CODEC_CONF_KEY,
         KeyValueCodecWithTags.class.getCanonicalName());
+    // force hfile v3
+    util.getConfiguration().setInt(HFile.FORMAT_VERSION_KEY, 3);
 
     util.startMiniCluster();
     setupNamespace();
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSecureLoadIncrementalHFiles.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSecureLoadIncrementalHFiles.java
index 69554eb..4359bf1 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSecureLoadIncrementalHFiles.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSecureLoadIncrementalHFiles.java
@@ -21,6 +21,7 @@ package org.apache.hadoop.hbase.mapreduce;
 
 import org.apache.hadoop.hbase.HConstants;
 import org.apache.hadoop.hbase.codec.KeyValueCodecWithTags;
+import org.apache.hadoop.hbase.io.hfile.HFile;
 import org.apache.hadoop.hbase.testclassification.LargeTests;
 import org.apache.hadoop.hbase.security.UserProvider;
 import org.apache.hadoop.hbase.security.access.AccessControlLists;
@@ -56,6 +57,8 @@ public class TestSecureLoadIncrementalHFiles extends  TestLoadIncrementalHFiles{
     // change default behavior so that tag values are returned with normal rpcs
     util.getConfiguration().set(HConstants.RPC_CODEC_CONF_KEY,
         KeyValueCodecWithTags.class.getCanonicalName());
+    // force hfile v3
+    util.getConfiguration().setInt(HFile.FORMAT_VERSION_KEY, 3);
 
     util.startMiniCluster();
 
-- 
1.7.9.5

