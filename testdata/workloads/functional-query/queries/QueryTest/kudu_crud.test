====
---- QUERY
-- Test KuduClient will automatically set the default port if no port is given
create table tdata_no_port ( id int, name string, valf float, vali bigint)
DISTRIBUTE BY RANGE SPLIT ROWS ((10), (30))
TBLPROPERTIES(
'storage_handler' = 'com.cloudera.kudu.hive.KuduStorageHandler',
'kudu.table_name' = 'tdata_no_port',
'kudu.master_addresses' = '127.0.0.1',
'kudu.key_columns' = 'id'
 )
---- RESULTS
====
---- QUERY
-- Invalid hostname
create table tdata_bogus_host ( id int, name string, valf float, vali bigint)
DISTRIBUTE BY RANGE SPLIT ROWS ((10), (30))
TBLPROPERTIES(
'storage_handler' = 'com.cloudera.kudu.hive.KuduStorageHandler',
'kudu.table_name' = 'tdata_no_port',
'kudu.master_addresses' = 'bogus host name',
'kudu.key_columns' = 'id'
 )
---- CATCH
Couldn't resolve this master's address bogus host name:7051
====
---- QUERY
-- Non-existing host
create table tdata_non_existing_host ( id int, name string, valf float, vali bigint)
DISTRIBUTE BY RANGE SPLIT ROWS ((10), (30))
TBLPROPERTIES(
'storage_handler' = 'com.cloudera.kudu.hive.KuduStorageHandler',
'kudu.table_name' = 'tdata_no_port',
'kudu.master_addresses' = 'bogus.host.name',
'kudu.key_columns' = 'id'
 )
---- CATCH
Couldn't resolve this master's address bogus.host.name:7051
====
---- QUERY
create table tdata ( id int, name string, valf float, vali bigint)
DISTRIBUTE BY RANGE SPLIT ROWS ((10), (30))
TBLPROPERTIES(
'storage_handler' = 'com.cloudera.kudu.hive.KuduStorageHandler',
'kudu.table_name' = 'tdata',
'kudu.master_addresses' = '0.0.0.0:7051',
'kudu.key_columns' = 'id'
 )
---- RESULTS
====
---- QUERY
insert into tdata values
(1, "martin", 1.0, 232232323),
(2, "david", cast(1.0 as float), 99398493939),
(3, "todd", cast(1.0 as float), 993393939)
---- RESULTS
: 3
====
---- QUERY
update tdata set vali=43 where id = 1
---- RESULTS
====
---- QUERY
select * from tdata
---- RESULTS
1,'martin',1.0,43
2,'david',1.0,99398493939
3,'todd',1.0,993393939
---- TYPES
INT,STRING,FLOAT,BIGINT
====
---- QUERY
update tdata set vali=43 where id > 1
---- RESULTS
====
---- QUERY
select * from tdata
---- RESULTS
1,'martin',1.0,43
2,'david',1.0,43
3,'todd',1.0,43
---- TYPES
INT,STRING,FLOAT,BIGINT
====
---- QUERY
update tdata set name='unknown' where name = 'martin'
---- RESULTS
====
---- QUERY
select * from tdata
---- RESULTS
1,'unknown',1.0,43
2,'david',1.0,43
3,'todd',1.0,43
---- TYPES
INT,STRING,FLOAT,BIGINT
====
---- QUERY
insert into tdata values (40, "he", cast(0.0 as float), 43), (120, "she", cast(0.0 as float), 99)
---- RESULTS
: 2
====
---- QUERY
select * from tdata
---- RESULTS
1,'unknown',1.0,43
2,'david',1.0,43
3,'todd',1.0,43
40,'he',0.0,43
120,'she',0.0,99
---- TYPES
INT,STRING,FLOAT,BIGINT
====
---- QUERY
update tdata set name=null where id = 40
---- RESULTS
====
---- QUERY
select * from tdata
---- RESULTS
1,'unknown',1.0,43
2,'david',1.0,43
3,'todd',1.0,43
40,'NULL',0.0,43
120,'she',0.0,99
---- TYPES
INT,STRING,FLOAT,BIGINT
====
---- QUERY
update tdata set name='he' where id = 40
---- RESULTS
====
---- QUERY
select * from tdata
---- RESULTS
1,'unknown',1.0,43
2,'david',1.0,43
3,'todd',1.0,43
40,'he',0.0,43
120,'she',0.0,99
---- TYPES
INT,STRING,FLOAT,BIGINT
====
---- QUERY
# Make sure we can insert empty strings into string columns and that we can scan them
# back.
insert into tdata values (320, '', 2.0, 932)
---- RESULTS
: 1
====
---- QUERY
select id, name from tdata where id = 320;
---- RESULTS
320,''
---- TYPES
INT,STRING
====
---- QUERY
-- Test that string case is ignored
create table ignore_column_case ( Id int, NAME string, vAlf float, vali bigint)
DISTRIBUTE BY RANGE SPLIT ROWS ((10, 'b'), (30, 'a'))
TBLPROPERTIES(
'storage_handler' = 'com.cloudera.kudu.hive.KuduStorageHandler',
'kudu.table_name' = 'ignore_column_case',
'kudu.master_addresses' = '127.0.0.1',
'kudu.key_columns' = 'Id,NAME'
 )
---- RESULTS
====
---- QUERY
insert into ignore_column_case values (1, 'Martin', 1.0, 10);
====
---- QUERY
select ID, nAmE, VALF, VALI from ignore_column_case;
---- RESULTS
1,'Martin',1.0,10
---- TYPES
INT,STRING,FLOAT,BIGINT
====
---- QUERY
insert into tdata values (666, "The Devil", cast(1.2 as float), 43)
---- RESULTS
: 1
====
---- QUERY
insert into tdata values (666, "The Devil", cast(1.2 as float), 43)
---- CATCH
Error while flushing Kudu session:
====
---- QUERY
insert ignore into tdata values (666, "The Devil", cast(1.2 as float), 43)
---- RESULTS
: 0
====
---- QUERY
-- Updating the same record twice
update a set a.name='Satan' from tdata a, tdata b where a.id = 666
---- RESULTS
====
---- QUERY
-- Does not exercise any error path in the sink because updating the same record twice
-- is valid. Makes sure IGNORE works.
update ignore a set a.name='Satan' from tdata a, tdata b where a.id = 666
---- RESULTS
====
---- QUERY
-- Using a cross join to generate the same delete twice. After the first delete succeeded,
-- trying to execute the second delete will fail because the record does not exist.
delete a from tdata a, tdata b where a.id = 666
---- CATCH
Error while flushing Kudu session:
====
---- QUERY
-- Re-insert the data
insert into tdata values (666, "The Devil", cast(1.2 as float), 43)
---- RESULTS
: 1
====
---- QUERY
delete ignore a from tdata a, tdata b where a.id = 666
---- RESULTS
====