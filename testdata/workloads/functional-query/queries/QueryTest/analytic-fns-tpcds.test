====
---- QUERY
# Analyic function with no partition
select i_item_sk, i_current_price,
   SUM (i_current_price)
  OVER (ORDER BY i_item_sk) running_total
from item
order by
  i_brand,
  i_item_sk
limit 10
---- RESULTS
462,5.940000057220459,4489.260004475713
780,NULL,7182.690017081797
1146,NULL,11135.77001901716
1329,0.6299999952316284,12916.92001874745
2029,NULL,19805.63005062938
2723,0.4600000083446503,26728.7700253576
2999,NULL,29348.44002732635
3016,NULL,29496.8000254333
4099,NULL,40021.33001980186
5030,NULL,48186.56999780238
---- TYPES
BIGINT, FLOAT, DOUBLE
====
---- QUERY
# Same as above, but with partition
select i_item_sk, i_brand, i_current_price,
   SUM (i_current_price)
  OVER (partition by i_brand ORDER BY i_item_sk) running_total
from item
order by
  i_brand,
  i_item_sk
limit 10
---- RESULTS
462,'',5.940000057220459,5.940000057220459
780,'',NULL,5.940000057220459
1146,'',NULL,5.940000057220459
1329,'',0.6299999952316284,6.570000052452087
2029,'',NULL,6.570000052452087
2723,'',0.4600000083446503,7.030000060796738
2999,'',NULL,7.030000060796738
3016,'',NULL,7.030000060796738
4099,'',NULL,7.030000060796738
5030,'',NULL,7.030000060796738
---- TYPES
BIGINT, STRING, FLOAT, DOUBLE
====
---- QUERY
# Same as above, but the order by column in the analytic function has repeating values
select i_item_sk, i_brand, i_current_price,
   SUM (i_current_price)
  OVER (partition by i_brand ORDER BY i_current_price) running_total
from item
order by
  i_brand,
  i_item_sk
limit 10
---- RESULTS
462,'',5.940000057220459,22.57000014185905
780,'',NULL,127.1000013053417
1146,'',NULL,127.1000013053417
1329,'',0.6299999952316284,1.450000017881393
2029,'',NULL,127.1000013053417
2723,'',0.4600000083446503,0.820000022649765
2999,'',NULL,127.1000013053417
3016,'',NULL,127.1000013053417
4099,'',NULL,127.1000013053417
5030,'',NULL,127.1000013053417
---- TYPES
BIGINT, STRING, FLOAT, DOUBLE
====
---- QUERY
# Nested analyic functions
select i_item_sk, i_brand, running_total,
   SUM (running_total)
  OVER (partition by i_manufact_id ORDER BY running_total) running_total2
from (
  select i_item_sk, i_brand, i_current_price, i_manufact_id,
     SUM (i_current_price)
    OVER (partition by i_brand ORDER BY i_current_price) running_total
  from item
  order by
    i_brand,
    i_item_sk
) sub
order by
  i_item_sk,
  i_brand desc
limit 10
---- RESULTS
1,'exportischolar #2',988.609997369349,5055.149993486702
2,'amalgamalg #1',17.76000007987022,92.01000032573938
3,'brandbrand #4',37.68999981880188,243.9599993303418
4,'importoexporti #1',26.6899998486042,82.84999971836805
5,'importoimporto #2',243.7600006908178,1132.660001158714
6,'exportiimporto #1',10.72999999672174,38.83999987691641
7,'amalgexporti #2',850.2300023883581,6619.620000600815
8,'exportiexporti #1',100.409999370575,514.9499994367361
9,'edu packamalg #2',292.4399999380112,1274.119997106493
10,'namelessunivamalg #11',16.4599996805191,51.78999987989664
---- TYPES
BIGINT, STRING, DOUBLE, DOUBLE
====
---- QUERY
# 2 analyic functions on different partition and order by columns
select i_item_sk, i_brand, i_current_price, i_manufact_id,
   SUM (i_current_price)
  OVER (partition by i_brand ORDER BY i_current_price) running_total,
   MAX (i_current_price)
  OVER (partition by i_manufact_id ORDER BY i_item_sk) running_max
from item
order by
  i_brand,
  i_item_sk
limit 10
---- RESULTS
462,'',5.940000057220459,NULL,22.57000014185905,5.940000057220459
780,'',NULL,NULL,127.1000013053417,5.940000057220459
1146,'',NULL,510,127.1000013053417,3.109999895095825
1329,'',0.6299999952316284,139,1.450000017881393,1.070000052452087
2029,'',NULL,169,127.1000013053417,7.559999942779541
2723,'',0.4600000083446503,NULL,0.820000022649765,5.940000057220459
2999,'',NULL,NULL,127.1000013053417,5.940000057220459
3016,'',NULL,272,127.1000013053417,4.849999904632568
4099,'',NULL,273,127.1000013053417,24.17000007629395
5030,'',NULL,289,127.1000013053417,28.79999923706055
---- TYPES
BIGINT, STRING, FLOAT, INT, DOUBLE, FLOAT
====
---- QUERY
# Union all in the FROM subquery
select i_item_sk, i_brand, i_current_price,
   SUM (i_current_price)
  OVER (partition by i_brand ORDER BY i_item_sk) running_total
from (
  select * from item
  union all
  select * from item
) sub
order by
  i_brand,
  i_item_sk
limit 10
---- RESULTS
462,'',5.940000057220459,11.88000011444092
462,'',5.940000057220459,11.88000011444092
780,'',NULL,11.88000011444092
780,'',NULL,11.88000011444092
1146,'',NULL,11.88000011444092
1146,'',NULL,11.88000011444092
1329,'',0.6299999952316284,13.14000010490417
1329,'',0.6299999952316284,13.14000010490417
2029,'',NULL,13.14000010490417
2029,'',NULL,13.14000010490417
---- TYPES
BIGINT, STRING, FLOAT, DOUBLE
====
---- QUERY
# Aggregate the column generated by the analytic function
select max(running_total)
from (
  select i_item_sk, i_current_price,
     SUM (i_current_price)
    OVER (partition by i_brand ORDER BY i_current_price) running_total
  from item
  order by
    i_brand,
    i_item_sk
) sub
---- RESULTS
2815.260010480881
---- TYPES
DOUBLE
====
